version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pme2go_postgres
    environment:
      - POSTGRES_DB=pme2go_production
      - POSTGRES_USER=pme2go_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports:
      - "5432:5432"
    networks:
      - pme2go_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pme2go_user -d pme2go_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: pme2go_redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pme2go_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PME2GO Application
  pme2go_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pme2go_app
    env_file:
      - .env.production
    environment:
      - DB_HOST=postgres
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"  # Frontend
      - "3002:3002"  # API
      - "3005:3005"  # WebSocket
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    networks:
      - pme2go_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pme2go_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - pme2go_network
    depends_on:
      - pme2go_app
    restart: unless-stopped

networks:
  pme2go_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local